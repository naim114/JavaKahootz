/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javakahootz;

import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author naimm
 */
public class CreateQuizMenu extends javax.swing.JFrame {

    final ArrayList<Quiz> question_list;

    /**
     * Creates new form CreateQuizMenu
     */
    public CreateQuizMenu() throws FileNotFoundException, IOException, ParseException {
        initComponents();
        setLocationRelativeTo(null);

        ArrayList<Quiz> question_list_initialize = new ArrayList<>();

        // read every quiz
        JSONParser parser = new JSONParser();
        Reader reader = new FileReader("tb_quiz.txt");
        JSONArray arr = (JSONArray) parser.parse(reader);

        for (int i = 0; i < arr.size(); i++) {
            Quiz quiz = new Quiz((JSONObject) arr.get(i));

            if (quiz.user.username.equals(new Users().getCurrentUser().username)) {
                question_list_initialize.add(quiz);
            }
        }

        this.question_list = question_list_initialize;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        BtnBack = new javax.swing.JButton();
        BtnCreateQuiz = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblQuiz = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Roboto Slab SemiBold", 0, 18)); // NOI18N
        jLabel1.setText("Create Quiz Menu");

        BtnBack.setBackground(new ThemeColors().danger);
        BtnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnBack.setForeground(new java.awt.Color(255, 255, 255));
        BtnBack.setText("Back");
        BtnBack.setToolTipText("Back to Main Menu");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        BtnCreateQuiz.setBackground(new ThemeColors().primary);
        BtnCreateQuiz.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnCreateQuiz.setForeground(new java.awt.Color(255, 255, 255));
        BtnCreateQuiz.setText("Create New Quiz");
        BtnCreateQuiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCreateQuizActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel2.setText("View your created quiz");

        TblQuiz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Quiz Title", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TblQuiz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblQuizMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TblQuiz);
        if (TblQuiz.getColumnModel().getColumnCount() > 0) {
            TblQuiz.getColumnModel().getColumn(1).setResizable(false);
            TblQuiz.getColumnModel().getColumn(2).setResizable(false);
            TblQuiz.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnCreateQuiz))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnCreateQuiz)
                    .addComponent(BtnBack))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            DefaultTableModel model = (DefaultTableModel) TblQuiz.getModel();

            System.out.println("\nAll Quiz Created by current user;");
            for (int i = 0; i < this.question_list.size(); i++) {
                Quiz quiz = this.question_list.get(i);
                System.out.println((i + 1) + ". " + quiz.title);
                model.addRow(new Object[]{quiz.title, "Leaderboard", "Edit", "Delete"});
            }

            // styling edit and delete cell
            TblQuiz.getColumnModel().getColumn(1).setCellRenderer(new ColumnColorRenderer(new ThemeColors().info, Color.WHITE));
            TblQuiz.getColumnModel().getColumn(2).setCellRenderer(new ColumnColorRenderer(new ThemeColors().warning, Color.WHITE));
            TblQuiz.getColumnModel().getColumn(3).setCellRenderer(new ColumnColorRenderer(new ThemeColors().danger, Color.WHITE));
            TblQuiz.getColumnModel().getColumn(1).setPreferredWidth(5);
            TblQuiz.getColumnModel().getColumn(2).setPreferredWidth(5);
            TblQuiz.getColumnModel().getColumn(3).setPreferredWidth(5);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void TblQuizMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblQuizMouseClicked
        int row = TblQuiz.rowAtPoint(evt.getPoint());
        int col = TblQuiz.columnAtPoint(evt.getPoint());
        Quiz selected_quiz = null;

        if (row >= 0 && col >= 0) {
            for (int i = 0; i < this.question_list.size(); i++) {
                if (i == row) {
                    selected_quiz = this.question_list.get(i);
                }
            }

            if (col == 1) {
                System.out.println("Leaderboard " + selected_quiz.id);
            } else if (col == 2) {
                System.out.println("Editing " + selected_quiz.id);
                this.dispose();

                new EditQuizSettings(selected_quiz).setVisible(true);
            } else if (col == 3) {
                System.out.println("Deleting " + selected_quiz.id);

                int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + selected_quiz.title + "? Once deleted data can't be retrieve back.");

                if (reply == JOptionPane.YES_OPTION) {
                    try {
                        // save data to to text file
                        // read every quiz
                        JSONParser parser = new JSONParser();
                        Reader reader = new FileReader("tb_quiz.txt");
                        JSONArray all_quiz = (JSONArray) parser.parse(reader);

                        // remove quiz that want to edit
                        for (int i = 0; i < all_quiz.size(); i++) {
                            JSONObject quiz = (JSONObject) all_quiz.get(i);

                            if (quiz.get("quiz_id").equals(selected_quiz.id)) {
                                all_quiz.remove(i);
                            }
                        }

                        // clear text file
                        FileWriter fwOb = new FileWriter("tb_quiz.txt", false);
                        PrintWriter pwOb = new PrintWriter(fwOb, false);
                        pwOb.flush();
                        pwOb.close();
                        fwOb.close();

                        // write back all of quizzes with new quiz added
                        FileWriter writer = new FileWriter("tb_quiz.txt", true);
                        writer.write(all_quiz.toJSONString());
                        writer.close();
                        JOptionPane.showMessageDialog(null, "Success Deleting Quiz " + selected_quiz.title);

                        // redirect back to create quiz menu
                        this.dispose();
                        new CreateQuizMenu().setVisible(true);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }//GEN-LAST:event_TblQuizMouseClicked

    private void BtnCreateQuizActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnCreateQuizActionPerformed
        this.dispose();

        new CreateQuizSettings().setVisible(true);
    }// GEN-LAST:event_BtnCreateQuizActionPerformed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnBackActionPerformed
        this.dispose();

        new MainMenu().setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnCreateQuiz;
    private javax.swing.JTable TblQuiz;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
